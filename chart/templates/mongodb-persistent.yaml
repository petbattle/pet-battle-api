{{- if .Values.mongodbTemplate.enabled }}
apiVersion: v1
kind: Secret
metadata:
  annotations:
    template.openshift.io/expose-admin_password: '{.data[''database-admin-password'']}'
    template.openshift.io/expose-database_name: '{.data[''database-name'']}'
    template.openshift.io/expose-password: '{.data[''database-password'']}'
    template.openshift.io/expose-username: '{.data[''database-user'']}'
  name: {{ include "mongodb.fullname" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
stringData:
  database-admin-password: {{ .Values.mongodbTemplate.database.adminPassword | quote }}
  database-name: {{ .Values.mongodbTemplate.database.name | quote }}
  database-password: {{ .Values.mongodbTemplate.database.password | quote }}
  database-user: {{ .Values.mongodbTemplate.database.user | quote }}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    template.openshift.io/expose-uri: mongodb://{.spec.clusterIP}:{.spec.ports[?(.name=="mongo")].port}
  name: {{ include "mongodb.fullname" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  ports:
    - name: mongo
      nodePort: 0
      port: 27017
      protocol: TCP
      targetPort: 27017
  selector:
    {{- include "mongodb.selectorLabels" . | nindent 4 }}
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "mongodb.fullname" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.mongodbTemplate.storage | quote }}
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: {{ include "mongodb.fullname" . }}
  creationTimestamp: null
spec:
  lookupPolicy:
    local: false
  tags:
    - name: latest
      from:
        kind: DockerImage
        name: {{ .Values.mongodbTemplate.image | quote }}
      importPolicy:
        insecure: true
      referencePolicy:
        type: Source
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: "true"
  name: {{ include "mongodb.fullname" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    {{- include "mongodb.selectorLabels" . | nindent 4 }}
  strategy:
    type: Recreate
    resources:
      limits:
        memory: 250Mi
      requests:
        cpu: 250m
        memory: 250Mi
  template:
    metadata:
      labels:
        {{- include "mongodb.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - env:
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ include "mongodb.fullname" . }}
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: {{ include "mongodb.fullname" . }}
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ include "mongodb.fullname" . }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: {{ include "mongodb.fullname" . }}
            - name: MONGODB_DB
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: {{ include "mongodb.fullname" . }}
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
            - containerPort: 27017
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -i
                - -c
                - mongosh 127.0.0.1:27017/$MONGODB_DATABASE --eval="quit()"
            initialDelaySeconds: 3
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /data/db
              name: mongodb-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: {{ include "mongodb.fullname" . }}
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - mongodb
        from:
          kind: ImageStreamTag
          name: {{ include "mongodb.fullname" . }}:latest
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
{{- end }}
