{{- if .Values.deploymentConfig }}
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ include "pet-battle-api.fullname" . }}
  labels:
    {{- include "pet-battle-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas.min }}
  revisionHistoryLimit: 10
  selector:
    {{- include "pet-battle-api.selectorLabels" . | nindent 4 }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '8080'
        rollme: {{ randAlphaNum 5 | quote }}
        {{- if .Values.istio.enabled }}
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/excludeOutboundPorts: "27017"
        proxy.istio.io/config: |
          tracing:
            sampling: 100.0
        {{- end}}
      creationTimestamp: null
      labels:
        {{- include "pet-battle-api.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - env:
            - name: QUARKUS_PROFILE
              value: prod
            - name: QUARKUS_LOG_LEVEL
              value: INFO
            - name: NSFF_API_SERVICE_ENABLED
              value: {{ .Values.nsff.enabled | default "false" | quote }}
            - name: NSFF_API_SERVICE_HOST
              value: {{ .Values.nsff.apiHost | default "tensorflowserving-pb-nsff" | quote }}
            - name: NSFF_API_SERVICE_PORT
              value: {{ .Values.nsff.apiPort | default 80 | quote }}
            - name: NSFF_LIMIT
              value: {{ .Values.nsff.limit | default 0.6 | quote }}
{{- if .Values.mongodbTemplate.enabled }}
            - name: MONGODB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: {{ include "mongodb.fullname" . }}
            - name: MONGODB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: {{ include "mongodb.fullname" . }}
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: {{ include "mongodb.fullname" . }}
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ include "mongodb.fullname" . }}
            - name: MONGODB_SERVICE_HOST
              value: {{ include "mongodb.fullname" . }}
            - name: MONGODB_SERVICE_PORT
              value: '27017'
{{- else }}
            - name: MONGODB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: cats-mongodb-replicaset-admin
            - name: MONGODB_DATABASE
              value: "test"
            - name: MONGODB_SERVICE_HOST
              value: {{ printf "%s-%s" "pet-battle-api" "mongodb-replicaset" | quote }}
            - name: MONGODB_SERVICE_PORT
              value: '27017'
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: cats-mongodb-replicaset-admin
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: cats-mongodb-replicaset-admin
{{- end }}
          image: ''
          imagePullPolicy: Always
          name: {{ include "pet-battle-api.name" . }}
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          resources:
            limits:
              cpu: '600m'
              memory: 500Mi
            requests:
              cpu: '100m'
              memory: 50Mi
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - {{ include "pet-battle-api.name" . }}
        from:
          kind: ImageStreamTag
          name: {{ include "pet-battle-api.fullname" . }}:{{ .Values.image_version }}
        lastTriggeredImage: ""
      type: ImageChange
{{- end }}
