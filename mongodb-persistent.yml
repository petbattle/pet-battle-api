apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: mongodb-persistent-template
message: |-
  The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

         Username: ${MONGODB_USER}
         Password: ${MONGODB_PASSWORD}
    Database Name: ${MONGODB_DATABASE}
   Connection URL: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${DATABASE_SERVICE_NAME}/${MONGODB_DATABASE}

  For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.
metadata:
  annotations:
    description: |-
      MongoDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.

      NOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.
    iconClass: icon-mongodb
    openshift.io/display-name: OCP-MongoDB (Persistent)
    tags: database,mongodb
    template.openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/db_images/mongodb.html
    template.openshift.io/long-description: This template provides a standalone MongoDB
      server with a database created.  The database is stored on persistent storage.  The
      database name, username, and password are chosen via parameters when provisioning
      this service.
  creationTimestamp: null
  name: mongodb-persistent
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  stringData:
    database-admin-password: ${MONGODB_ADMIN_PASSWORD}
    database-password: ${MONGODB_PASSWORD}
    database-user: ${MONGODB_USER}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: mongo
      nodePort: 0
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: ${DATABASE_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${DATABASE_SERVICE_NAME}-config
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY_CONFIG}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${DATABASE_SERVICE_NAME}-db
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY_DB}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: ${MONGODB_IMAGE}
    creationTimestamp: null
  spec:
    lookupPolicy:
      local: false
    tags:
      - name: latest
        from:
          kind: DockerImage
          name: "registry.access.redhat.com/rhscl/mongodb-36-rhel7:${MONGODB_VERSION}"
        importPolicy:
          insecure: true
        referencePolicy:
          type: Source
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${DATABASE_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${DATABASE_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${DATABASE_SERVICE_NAME}
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${DATABASE_SERVICE_NAME}
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: ${DATABASE_SERVICE_NAME}
          - name: MONGODB_DATABASE
            value: ${MONGODB_DATABASE}
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            initialDelaySeconds: 3
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /data/configdb
            name: ${DATABASE_SERVICE_NAME}-config
          - mountPath: /data/db
            name: ${DATABASE_SERVICE_NAME}-db
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: ${DATABASE_SERVICE_NAME}-config
          persistentVolumeClaim:
                claimName: ${DATABASE_SERVICE_NAME}-config
        - name: ${DATABASE_SERVICE_NAME}-db
          persistentVolumeClaim:
                claimName: ${DATABASE_SERVICE_NAME}-db
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: ${MONGODB_IMAGE}:${MONGODB_VERSION}
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}
parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mongodb
- description: Username for MongoDB user that will be used for accessing the database.
  displayName: MongoDB Connection Username
  from: user[A-Z0-9]{3}
  generate: expression
  name: MONGODB_USER
  required: true
- description: Password for the MongoDB connection user.
  displayName: MongoDB Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MONGODB_PASSWORD
  required: true
- description: Name of the MongoDB database accessed.
  displayName: MongoDB Database Name
  name: MONGODB_DATABASE
  required: true
  value: sampledb
- description: Password for the database admin user.
  displayName: MongoDB Admin Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MONGODB_ADMIN_PASSWORD
  required: true
- description: Volume space available for config database, e.g. 512Mi, 2Gi.
  displayName: Config Volume Capacity
  name: VOLUME_CAPACITY_CONFIG
  required: true
  value: 1Gi
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Data Volume Capacity
  name: VOLUME_CAPACITY_DB
  required: true
  value: 1Gi
- description: The name of the MongoDB imagestream to be used
  displayName: Name of MongoDB Image
  name: MONGODB_IMAGE
  value:  mongodb-36-rhel7
- description: Version of MongoDB image to be used
  displayName: Version of MongoDB Image
  name: MONGODB_VERSION
  required: true
  value: "latest"
