# configure the MongoDB client for a single node cluster on localhost
#quarkus.mongodb.connection-string = mongodb://${DATABASE_USER}:${DATABASE_PASSWORD}@${MONGODB_SERVICE_HOST}:${MONGODB_SERVICE_PORT}/${DATABASE_NAME}
quarkus.mongodb.connection-string=mongodb://localhost:27018
quarkus.mongodb.write-concern.journal=false
# mandatory if you don't specify the name of the database using @MongoEntity
quarkus.mongodb.database = cats
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.swagger-ui.always-include=true

# rest
quarkus.http.test-port=8081

# nsff
app.petbattle.rest.client.NSFFService/mp-rest/scope=javax.inject.Singleton
app.petbattle.rest.client.NSFFService/mp-rest/url=http://localhost:5000
#app.petbattle.rest.client.NSFFService/mp-rest/url=http://tensorflowserving-pet-battle-nsff-pb.apps.hivec.sandbox1249.opentlc.com
app.petbattle.nsff.enabled=false
# images with a nsff prediction greater that this will be rejected
app.petbattle.nsff.limit=0.6

# logging configuration
quarkus.log.level=${QUARKUS_LOG_LEVEL:INFO}
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.color=false
%dev.quarkus.log.console.color=true
%test.quarkus.log.console.color=false
%test.quarkus.log.level=INFO
